# Nama workflow yang akan tampil di tab "Actions"
name: Build Android Debug APK

# Pemicu: Kapan workflow ini akan berjalan?
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Baris ini ditambahkan agar workflow bisa dijalankan secara manual
  workflow_dispatch:

jobs:
  build:
    # Menggunakan "robot" virtual dengan sistem operasi Ubuntu versi terbaru
    runs-on: ubuntu-latest

    steps:
      # Langkah 1: Mengunduh (checkout) source code Anda ke dalam robot
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      # Langkah 2: Menginstal Java (JDK) versi 17 yang dibutuhkan untuk build Android
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Langkah 3: Memberi izin eksekusi pada file gradlew (Penting!)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Langkah 4: Menjalankan perintah untuk membuat APK versi Debug
      # Versi Debug sangat ideal untuk testing dan tidak memerlukan signing key.
      - name: Assemble Debug Build
        run: ./gradlew assembleDebug

      # Langkah 5: Mengunggah file APK yang sudah jadi sebagai "Artifact"
      # Artifact adalah file hasil proses yang bisa di-download.
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          # Ini adalah nama file ZIP yang akan di-download nanti
          name: app-debug.apk
          # Ini adalah path yang benar untuk APK versi Debug
          path: app/build/outputs/apk/debug/app-debug.apk
